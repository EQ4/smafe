#!/bin/bash

# Helper script to run smafe daemons
# Author: Wolfgang Jochum, <jochum@spectralmind.com>
#
# Note: DAEMON1 is smafewrapd, DAEMON2 is smafedistd



######
# if restart option is given stop deamons 
######

###### 
# build pidof command for mac/linux usage
#####
pidof () { ps aux | grep $1 | grep -v grep | awk '{print $2}';echo; }


# get folder where this file is in
dirname=`dirname $0`
tmp="${dirname#?}"

if [ "${dirname%$tmp}" != "/" ]; then
	dirname=$PWD/$dirname
fi


### include stuff that has been generated by setup
# system specific stuff (folder...)
. $dirname/../archive/system/smafed.conf

DESC="Spectralmind's Smafe system"
NAME1=smafewrapd
NAME2=smafedistd

# binary
DAEMON1=$DAEMONPATH/bin/bin-internal/$NAME1
# for --startas
DAEMON1_START=$DAEMONPATH/bin/$NAME1.sh

# binary
DAEMON2=$DAEMONPATH/bin/bin-internal/$NAME2
# for --startas
DAEMON2_START=$DAEMONPATH/bin/$NAME2.sh

#smafewrapd
do_start1()
{
  testwrapDaemonrunning=$(ps aux |grep smafewrapd  |grep -v grep  |  wc -l)
  # contains number of lines with that id.
  if [ $testwrapDaemonrunning -eq 0 ]; then
	echo "WARNING: Daemon seems not be running"
	echo "INFO: starting smafewrapd ..." 
	# ./smafewrapd.sh --dbconf=smafedbconn-localhost-testsmintapi-smafeadmin.opt --id=testsmintapiwrap
	$DAEMON1_START $DAEMON1_ARGS
  fi

  wrapdpid=$(pidof $DAEMON1)
  if [ -z $wrapdpid ]; then
        echo "ERROR: smafewrapd Daemon could not be started !!!"
  else
        echo "smafewrapd Daemon seems to be running with PID: $wrapdpid"
  fi
	
}

#smafedistd
do_start2()
{
  testdistdDaemonrunning=$(ps aux |grep smafedistd  |grep -v grep  |  wc -l)
  # contains number of lines with that id.
  if [ $testdistdDaemonrunning -eq 0 ]; then
	echo "WARNING: smafedistd Daemon seems not be running." 
	echo "INFO: starting smafedistd ..." 
	#./smafedistd.sh --jobs --dbconf=smafedbconn-localhost-testsmintapi-smafeadmin.opt --id=testsmintapidist 
	$DAEMON2_START $DAEMON2_ARGS
  fi


  distdpid=$(pidof $DAEMON2)
  if [ -z $distdpid ]; then
	echo "ERROR: smafedistd Daemon could not be started !!!" 
  else
	echo "smafedistd Daemon seems to be running with PID: $distdpid" 
  fi
	
}

#smafewrapd
do_stop1()
{
	wrapdpid=$(pidof $DAEMON1)
    if [ ${#wrapdpid} -gt 0 ]; then
            echo "WARNING: stopping smafewrapd"
            while [ ${#wrapdpid} -gt 0 ]; do
                    kill $wrapdpid
                    sleep 1
                    echo "."
                    wrapdpid=$(pidof $DAEMON1)
            done
    fi
}

#smafedistd
do_stop2()
{
	distdpid=$(pidof $DAEMON2)

	if [ ${#distdpid} -gt 0 ]; then
		echo "WARNING: stopping smafedistd"
		while [ ${#distdpid} -gt 0 ]; do
			kill $distdpid
			sleep 1
			echo "."
			distdpid=$(pidof $DAEMON2)
		done
	fi
}


case "$1" in
  start)
	do_start1
	do_start2
	;;

  stop)
	echo "WARNING: stopping Daemons now."
	do_stop1
	do_stop2
	;;

  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	echo "WARNING: stopping Daemons now."
	do_stop1
	do_stop2
	do_start1
	do_start2
	;;

  status)
	# find pids
	DAEMON1_PID=$(pidof $DAEMON1)
	DAEMON2_PID=$(pidof $DAEMON2)

	# check if both pids are available:
	if [ -n $DAEMON1_PID -a -n $DAEMON2_PID ]; then

		# echo pids
		echo "Smafe daemons running with PIDS: $DAEMON1_PID (=smafewrapd) and $DAEMON2_PID (=smafedistd)"
		
		# guess logfile: get most recent logfile in daemon path
		# ls -1t sorts files by modified timestamp and puts one file per line
		LOGFILE1=$(ls -1t $DAEMONPATH/smafewrapd*log 2> /dev/null |head -n 1)
		if [  "$LOGFILE1" != "" ]; then
			echo Assuming active log file: $LOGFILE1
			# start time
			echo -n "Daemon started at: "
			head -n 1 $LOGFILE1 | cut -d " " -f 1-2 
			# grep status log entries
			grep "open" $LOGFILE1 |tail -n 6
			# Estimated end time check in last 100 lines and get the last one
			tail -n 100 $LOGFILE1  | grep "Estimated end time" | tail -n 1
			# grep latest status: we assume that in the last 5 lines there are the "sleep" and related lines
			tail -n 5 $LOGFILE1 | grep "Going to sleep"
			tail -n 5 $LOGFILE1 | grep "Will stop daemon after"
		else
        	echo "Warning: No logfile found for smafewrapd"
        fi

		LOGFILE2=$(ls -1t $DAEMONPATH/smafedistd*log 2> /dev/null |head -n 1)
		if [  "$LOGFILE2" != "" ]; then
			echo Assuming active log file: $LOGFILE2
			# start time
			echo -n "Daemon started at: "
			head -n 1 $LOGFILE2 | cut -d " " -f 1-2 
			tail -n 100 $LOGFILE2 | grep "open task(s)" | grep -v -- -1 | tail -n 2
			# Last finished job
			tail -n 100 $LOGFILE2  | grep "Finished task: " | tail -n 1
			# grep latest status: we assume that in the last 5 lines there are the "sleep" and related lines
			tail -n 5 $LOGFILE2 | grep "Going to sleep"
			tail -n 5 $LOGFILE2 | grep "Will stop daemon after"
		else
        	echo "Warning: No logfile found for smafedistd"
        fi

	else

		echo One or more smafe daemons NOT running.
		echo PID of smafewrapd: $DAEMON1_PID
		echo PID of smafedistd: $DAEMON2_PID

	fi

	;;

  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

